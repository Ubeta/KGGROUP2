<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.ttbatis.ttMapper">
	<insert id="regmember" parameterType="memdto">
		insert into member (m_id,m_pw, m_name, m_idnum, m_gender, m_tel, m_mail, m_pic) values
		(#{m_id},#{m_pw},#{m_name},#{m_idnum},#{m_gender},#{m_tel},#{m_mail}, #{m_pic})
	</insert>
	<!-- 아이디 중복 체크 -->
	<select id="idchk" resultType="String">
		select m_id from member where m_id
		= #{m_id}
	</select>
	<!-- 전화번호 중복 체크 -->
	<select id="telchk" resultType="String">
		select m_tel from member where
		m_tel = #{m_tel}
	</select>
	<!-- 이메일 중복 체크 -->
	<select id="mailchk" resultType="String">
		select m_mail from member where
		m_mail = #{m_mail}
	</select>

	<!-- 카테고리 insert -->
	<insert id="category_insert" parameterType="catdto">
		insert into category
		values(
		#{m_id},
		#{c_sports}, #{c_news },#{c_food },#{c_language },#{c_people },
		#{c_animal
		},#{c_fashion },#{c_love },#{c_movie },#{c_religion },
		#{c_knowledge
		},#{c_travel },#{c_cartoon },#{c_game },#{c_it },
		#{c_weather
		},#{c_music },#{c_car },#{c_economy },#{c_etc },
		#{c_job },#{c_living
		},#{c_book },#{c_festival },#{c_health })
	</insert>

	<!-- 이상호 -->
	<!-- 일반 로그인임. -->
	<select id="loginchk" resultType="memdto" parameterType="String">
		select * from member where m_id=#{m_id}
	</select>
	
	  <!-- 카카오 로그인 관련 -->
   <select id="kakaologinchk" resultType="kdto">
		select * from kmember where k_id=#{k_id}   
   </select>
   
   <!-- 카카오 첫 로그인이면 회원가입 -->
   <select id="regkakao" parameterType="kdto" resultType="kdto">
   		insert into kmember values(#{k_id})
   </select>
   
  <!-- 카카오 로그인 후 카테고리 가져오기 -->
  <select id="kakaocategorychk" parameterType="kdto" resultType="catdto">
   		select * from category where m_id=#{k_id}
   </select>
   

  
   <!-- 네이버 아이디가 등록되어있는지 확인 -->
   <select id="naverloginchk" resultType="ndto" parameterType="ndto">
   		select * from nmember where n_id=#{n_id}
   </select>
   
   <!-- 네이버 첫 로그인이면 회원가입 -->
   <select id="regnaver" parameterType="ndto">
   		insert into nmember values(#{n_id},#{n_name},#{n_email},#{n_gender})
   </select>

   <!-- 네이버 아이디로 카테고리 가져오기    -->
   <select id="navercategorychk" parameterType="ndto" resultType="catdto">
   		select * from category where m_id=#{n_id}
   </select>
   
   <!-- 11월21일 추가 일반로그인 카테고리 가져오기 -->
   <select id="mcategorychk" parameterType="String" resultType="catdto">
   		select * from category where m_id=#{m_id}
   </select>
   
   
   <!-- 카테고리 메인에서 업데이트 -->
   <select id="updatecategory" parameterType="catdto">
   		update category set c_sports=#{c_sports}, c_news=#{c_news },
   		 c_food=#{c_food }, c_language=#{c_language },
   		  c_people=#{c_people }, c_animal=#{c_animal },
   		   c_fashion=#{c_fashion }, c_love=#{c_love },
   		    c_movie=#{c_movie }, c_religion=#{c_religion }, 
   		    c_knowledge=#{c_knowledge }, c_travel=#{c_travel }, 
   		    c_cartoon=#{c_cartoon }, c_game=#{c_game }, c_it=#{c_it }, 
   		    c_weather=#{c_weather }, c_music=#{c_music }, c_car=#{c_car }, 
   		    c_economy=#{c_economy }, c_etc=#{c_etc }, c_job=#{c_job }, 
   		    c_living=#{c_living	}, c_book=#{c_book }, c_festival=#{c_festival }, 
   		    c_health=#{c_health } where m_id=#{m_id}  
   </select>
   
   <!-- 이상호 끝 -->
	
	<!-- John(11/14): 사람 조회 select 문 -->
	<select id="userLookUp" resultType="memdto" parameterType="String">
		SELECT * FROM member WHERE m_id=#{m_id}
	</select>
	<!-- John(11/15): 친구인지 확인 문 -->
	<select id="checkFriendStatus1" resultType="Integer" parameterType="mfdto">
		SELECT f_isfriend FROM myfriend WHERE m_id=#{m_id} AND
		f_id=#{f_id}
	</select>
	<select id="checkFriendStatus2" resultType="Integer" parameterType="mfdto">
		SELECT f_isfriend FROM myfriend WHERE m_id=#{f_id} AND
		f_id=#{m_id}
	</select>
	<select id="getUserPosts" resultType="podto" parameterType="String">
		SELECT * FROM post WHERE m_id=#{m_id}
	</select>
	
	<insert id="sendFriendRequest1" parameterType="mfdto">
		INSERT INTO myfriend (m_id, f_id, f_isfriend) VALUES (#{m_id}, #{f_id}, #{f_isfriend})
	</insert>
	<insert id="sendFriendRequest2" parameterType="mfdto">
		INSERT INTO myfriend (m_id, f_id, f_isfriend) VALUES (#{f_id}, #{m_id}, #{f_isfriend})
	</insert>
	<delete id="cancelFriendRequest1" parameterType="mfdto">
		DELETE FROM myfriend WHERE m_id=#{m_id} AND f_id=#{f_id}
	</delete>
	<delete id="cancelFriendRequest2" parameterType="mfdto">
		DELETE FROM myfriend WHERE m_id=#{f_id} AND f_id=#{m_id}
	</delete>
	<update id="acceptFriendRequest1" parameterType="mfdto">
		UPDATE myfriend SET f_isfriend=#{f_isfriend} WHERE m_id=#{m_id} AND f_id=#{f_id}
	</update>
	<update id="acceptFriendRequest2" parameterType="mfdto">
		UPDATE myfriend SET f_isfriend=#{f_isfriend} WHERE m_id=#{f_id} AND f_id=#{m_id}
	</update>
	<delete id="removeFriend1" parameterType="mfdto">
		DELETE FROM myfriend WHERE m_id=#{m_id} AND f_id=#{f_id}
	</delete>
	<delete id="removeFriend2" parameterType="mfdto">
		DELETE FROM myfriend WHERE m_id=#{f_id} AND f_id=#{m_id}
	</delete>
	<select id="getFriendRequests" resultType="memdto" parameterType="mfdto">
		SELECT a.* FROM member a JOIN myfriend b ON a.m_id=b.m_id WHERE b.f_isfriend=1 
			AND b.f_id=#{m_id}
	</select>
	
	<insert id="inputPostReply" parameterType="redto">
		INSERT INTO reply (m_id, r_num, r_idgroup, r_content) VALUES (#{m_id},
			r_num_seq.nextval, #{r_idgroup}, #{r_content})
	</insert>
	<select id="getPostReplies" resultType="redto" parameterType="Integer">
		SELECT * FROM reply WHERE r_idgroup=#{r_idgroup} ORDER BY r_date DESC
	</select>
	
	<!-- John 긑 -->
	
	
	
   
   <!-- 친구 목록 -->
   <select id="friendLists" resultType="memdto" parameterType="String">
   		select m_id, m_pic 
   		from member A 
		where A.m_id in(select B.f_id 
						from myfriend B 
						where B.m_id = #{m_id} and B.f_isfriend = 2)
   	</select>
   	
   	<!-- 친구들이 등록한 포스트만 추출 -->
   	<select id="friendPost" resultType="podto" parameterType="String">
   		select * 
   		from post C 
   		where C.m_id in(select m_id 
   						from member A 
						where A.m_id in(select B.f_id 
										from myfriend B 
										where B.m_id = #{m_id} and B.f_isfriend = 2) or C.m_id= #{m_id})
   	</select>
   <!-- yang -->
	<!-- 내정보 가져오기 -->
   <select id="my_info" resultType="memdto" parameterType="String">
   		select * from member where m_id=#{sessionid}
   </select>
   <select id="my_cat" resultType="catdto" parameterType="String">
   		select * from category where m_id=#{sessionid}
   </select>
   <!-- 친구정보 가져오기 -->
   <select id="f_info" resultType="memdto" parameterType="String">
   		select * from member where m_id=#{user_id}
   </select>
   <!-- 내정보 수정 -->
   <update id="info_fix" parameterType="memdto">
		update member set m_name=#{m_name}, m_tel=#{m_tel}, m_mail=#{m_mail} where m_id=#{m_id}
	</update>
	<!-- 친구 목록 확인 -->
	<select id="f_list" resultType="mfdto" parameterType="String">
   		select f_id from myfriend where m_id=#{user_id}
   </select>
	<!-- 친구 추가 -->
	<insert id="friend_add" parameterType="mfdto">
		insert into myfriend (m_id, f_id) values(#{m_id}, #{f_id})
	</insert>
	<!-- 글쓰기 -->
	<insert id="write_board" parameterType="podto">
		insert into post (m_id, p_num, p_title, p_content, p_img, p_cat, p_hash, p_idgroup, p_scope, p_date, p_like)
		values(#{m_id}, p_num_seq.nextval, #{p_title}, #{p_content}, #{p_img}, #{p_cat}, #{p_hash}, p_num_seq.currval, #{p_scope}, sysdate, #{p_like})
	</insert>
	<!-- 글리스트 가져오기 -->
	<select id="board_list" resultType="podto" parameterType="String">
		select * from post where m_id=#{sessionid} order by p_date desc
	</select>
</mapper>